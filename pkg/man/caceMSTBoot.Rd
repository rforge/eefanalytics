% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eefAnalyticPerm.R
\name{caceMSTBoot}
\alias{caceMSTBoot}
\title{CACE Analysis of Multisite Randomised Trials.}
\usage{
caceMSTBoot(formula, random, intervention, compliance, nBoot, data)
}
\arguments{
\item{formula}{specifies the model to be analysed.
It is of the form y~x1+x2+...,  where y is the outcome variable and X's are the predictors.}

\item{random}{a string variable specifying the "clustering" variable as contained in the data.
This must be put between  quotes. For example, "school".}

\item{intervention}{the name of the intervention variable as appeared in formula.
This must be put in quotes.  For example "intervention" or "treatment" or "group".}

\item{compliance}{percentages of sessions attended by pupils.}

\item{nBoot}{number of bootstrap required to generate bootstrap confidence interval. This must be specified.}

\item{data}{data frame containing the data to be analysed.}
}
\value{
S3 object; a list consisting of
\itemize{
\item \code{CACE}. Estimated CACE effect size based on percentages of sessions attended by pupils. 
The percentage data is converted into the following grids (0, 10, 20, 30, 40, 50, 60, 70, 80, 90) 
and CACE effect size is calculated for each grid.
\item \code{Compliers}. A summary table of the percentage of pupils in the intervention and control groups that 
attended more than a pre-specified percentage of sessions. The values for the control group should be zeros if 
there is no dilution in which a pupil or school in the control group receives intervention.
}
}
\description{
\code{caceMSTBoot} performs CACE analysis of multisite randomised trials.
Intervention variable must be coded as dummy with multiple analysis for multi-arm trials.
}
\examples{
data(catcht)


############# MST
caceOutput2<- caceMSTBoot(Posttest~ Prettest+ Intervention,
			random="School",intervention="Intervention",
			compliance = "Percentage_Attendance",
			nBoot=1000,data=catcht)

### visualising CACE ES

require(metafor)
forest(x=caceOutput2$CACE$ES, ci.lb=caceOutput2$CACE$LB, 
		ci.ub=caceOutput2$CACE$UB, xlab="CACE ES",
		slab=as.character(caceOutput2$CACE$Compliance),
		xlim=c(-1,2), alim=c(-1,7), cex=1,lwd=1.5)



# write.csv(caceOutput2$CACE,file="D:\\\\eefAnalytics\\\\wd\\\\example.csv",row.names=FALSE)
}

